image: windows-server-2019-dc-base-gce

environment:
  matrix:
  - job_name: VS 2019 on GCE us-central1
    APPVEYOR_BUILD_WORKER_IMAGE: windows-server-2019-dc-base-gce-us-central1
    APPVEYOR_BAKE_IMAGE: vs2019-gce-us-central1
  - job_name: VS 2019 on Azure West US
    APPVEYOR_BUILD_WORKER_IMAGE: windows-server-2019-dc-base-azure-westus
    APPVEYOR_BAKE_IMAGE: vs2019-azure-westus

  base_dir: src\build-images-%APPVEYOR_REPO_BRANCH%\scripts\Windows

init:
- appveyor version
- ps: $ErrorActionPreference = 'Stop'
- ps: $env:cloud_type = (Get-ItemProperty "HKLM:\Software\AppVeyor\Build Agent").Mode

clone_script:
- ps: Invoke-WebRequest "https://github.com/appveyor/build-images/archive/$($env:APPVEYOR_REPO_BRANCH).zip" -OutFile scripts.zip
- ps: Expand-Archive -Path $env:APPVEYOR_BUILD_FOLDER\scripts.zip -DestinationPath $env:APPVEYOR_BUILD_FOLDER\src -Force

build_script:
- cd %base_dir%
- ps: .\init_server.ps1
#- ps: .\extend_system_volume.ps1

# Restart VM
- ps: Start-Sleep -s 5
- ps: Restart-Computer
- ps: Start-Sleep -s 5

- cd %base_dir%
- appveyor version
- ps: Copy-Item .\path-utils.psm1 "$env:TEMP\path-utils.psm1"
- ps: .\install_path_utils.ps1
- ps: .\install_powershell_core.ps1
- ps: .\install_powershell_get.ps1
- ps: .\install_7zip.ps1
- ps: .\install_chocolatey.ps1
- ps: .\install_webpi.ps1
- ps: .\install_nuget.ps1
- ps: .\install_pstools.ps1

- ps: .\install_git.ps1
- ps: .\install_git_lfs.ps1
- ps: .\install_mercurial.ps1
- ps: .\install_subversion.ps1
- ps: .\add_ssh_known_hosts.ps1

# - ps: .\install_docker_hyperv_wsl_features.ps1

# # Restart VM
# - ps: Start-Sleep -s 5
# - ps: Restart-Computer
# - ps: Start-Sleep -s 5

# - cd %base_dir%
# - ps: if ($env:cloud_type -eq 'GCE' -or $env:cloud_type -eq 'AmazonEC2') { .\install_docker.ps1 }
# - ps: |
#     if ($env:cloud_type -ne 'GCE' -and $env:cloud_type -ne 'AmazonEC2') {
#       Copy-Item .\docker-appveyor.psm1 "$env:TEMP\docker-appveyor.psm1"
#       .\install_docker_desktop.ps1
#     }

# # Restart VM
# - ps: Start-Sleep -s 5
# - ps: Restart-Computer
# - ps: Start-Sleep -s 5

# - cd %base_dir%
# - ps: if ($env:cloud_type -eq 'GCE' -or $env:cloud_type -eq 'AmazonEC2') { .\install_docker_after_reboot.ps1 }
# - ps: if ($env:cloud_type -ne 'GCE' -and $env:cloud_type -ne 'AmazonEC2') { .\install_docker_desktop_after_reboot.ps1 }

# Restart VM
- ps: Start-Sleep -s 5
- ps: Restart-Computer
- ps: Start-Sleep -s 5

- cd %base_dir%
- appveyor version
- ps: .\disable_windows_background_services.ps1
- ps: .\enforce_windows_firewall.ps1
- ps: .\cleanup_windows.ps1

test: off
